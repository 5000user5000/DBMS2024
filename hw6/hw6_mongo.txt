# task 1
use hw6
mongoimport --db hw6 --collection students --type csv --headerline --file studentE.csv

db.students.find({ _id : 'b09502132' })

# task 2
db.students.aggregate([
    { $match: { "position": "學生" } },
    { $group: { _id : "$dept", count: { $sum: 1 } } },
    { $sort: { count: -1 } },
    { $limit: 10 }
])

# task 3
mongoimport --db hw6 --collection students --type csv --headerline --file new_studentE.csv

db.students.updateMany(
    {},  
    { $set: { "updated": ISODate("2024-05-23") } }
)

db.students.find({ dept : "機械系" })

# task 4
db.students.updateMany(
    { "dept": { $in: ["太空系", "太空所"] } },
    { $set: { "updated": ISODate("2024-06-01") } }
)

db.students.updateOne(
  { "_id" : "b09502132" },
  { $set: { "updated" : ISODate("2024-06-01") } }
)

db.students.find({ "updated" : ISODate("2024-06-01") })

# task 5
db.students.aggregate([
    { $match: { "updated": { $gte: ISODate("2024-01-01"), $lt: ISODate("2024-06-01") } } },
    { $group: { _id: "$dept", count: { $sum: 1 } } },
    { $out: "tally" }
])

db.tally.find()

db.students.aggregate([
    { $match: { "updated": { $gte: ISODate("2024-06-01"), $lt: ISODate("2024-07-01") } } },
    { $group: { _id: "$dept", count: { $sum: 1 } } },
    { $out: "tally" }
])

db.tally.find()

# task 6
mongoimport --db hw6 --collection students --type csv --headerline --file student_groupE.csv --mode=merge 

# task 7
db.students.aggregate([
  { $match: { "group": { $exists: true, $ne: null } } },  
  { $group: { _id: "$group", members: { $push: "$name" } } },
  { $sort: { _id: 1 } },
  {
    $project: {
      _id: 0,  
      group_number: "$_id",  
      members: 1
    }
  }
])